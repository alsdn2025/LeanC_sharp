using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


// 한글은 보통 사용하지 않는다.
// 쓸 수 없다는 건 아니다.
// 모든 코드들이 영어로 되어있고, 한글의 처리가 미흡한 점들이 몇몇 있다. 


// 게임을 만들게 되면
// 큰개념 

// Stater


class Player /*개념: 플레이어가 있다*/
{
    
    int Gold; // 개념 : 플레이어는 골드를 가진다.
    int Exp;
    //등등등.. --> 이런게 멤버변수. 
    // 이런 애들은 좀 쉬운거지. '

    bool IsFight; // 싸울수 있는가 여부. 
    // 세부속성이면서 명사면서 값... 여러 개념들이 응축. 결국에는 값. 

    //멤버변수의 선언은 int(자료형) 이름(식별자)
    // 초기값을 넣어줄 수 있다. 
    // 리터럴값이라고 한다. 
    // 선언을 함과 동시에 값을 넣어주는것을 
    // 리터럴 초기화라고 한다. 
    // 검색능력도 프로그래머의 능력. 남의 힘을 얼마나 잘 빌려쓰는가. 
    // 심지어 인터넷에 모든게 뿌려져있다! 
    // 스스로 해결해야겠다 x

    // 자료형의 의미 : 크기, 형태, 이름의 의미, 위치, 별명
    int Att = 300;
    // int Att --> 램에 30 번지에 4바이트만큼의 공간을 할당해라. 
    // = 300;  --> 30번지에 300이라는 값을 넣어라. 
    int Def = 100;
    int Hp = 400;

    // 프로그램실행의 핵심
    // 1. 코드엔 공짜가 없다. 어떤 코드든 메모리라는 값을 지불한다. 

    // exe 파일을 실행하면 이 프로그램은 램에 올라가게(복사되게) 된다.
    


}